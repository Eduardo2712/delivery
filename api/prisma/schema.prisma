generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model UserAddress {
    id             Int      @id @default(autoincrement())
    usa_id_user    Int
    usa_cep        String   @db.VarChar(255)
    usa_street     String   @db.VarChar(255)
    usa_number     String   @db.VarChar(255)
    usa_district   String   @db.VarChar(255)
    usa_complement String?  @db.VarChar(255)
    usa_city       String   @db.VarChar(255)
    usa_state      String   @db.VarChar(255)
    usa_delete     Boolean  @default(false)
    created_at     DateTime @default(now())
    updated_at     DateTime @default(now())
    user           User     @relation(fields: [usa_id_user], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([usa_id_user])
    @@map("user_addresses")
}

model AdminAddress {
    id             Int      @id @default(autoincrement())
    ada_id_admin   Int
    ada_cep        String   @db.VarChar(255)
    ada_street     String   @db.VarChar(255)
    ada_number     String   @db.VarChar(255)
    ada_district   String   @db.VarChar(255)
    ada_complement String?  @db.VarChar(255)
    ada_city       String   @db.VarChar(255)
    ada_state      String   @db.VarChar(255)
    ada_delete     Boolean  @default(false)
    created_at     DateTime @default(now())
    updated_at     DateTime @default(now())
    admin          Admin    @relation(fields: [ada_id_admin], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([ada_id_admin])
    @@map("admin_addresses")
}

model User {
    id             Int           @id @default(autoincrement())
    use_id_photo   Int?
    use_name       String        @db.VarChar(255)
    email          String        @db.VarChar(255)
    use_phone      String        @db.VarChar(255)
    use_cpf        String        @db.VarChar(255)
    use_date_birth DateTime
    password       String        @db.VarChar(255)
    use_delete     Boolean       @default(false)
    created_at     DateTime      @default(now())
    updated_at     DateTime      @default(now())
    photo          Photo?        @relation(fields: [use_id_photo], references: [id], onDelete: Cascade, onUpdate: NoAction)
    addresses      UserAddress[]

    @@index([use_id_photo])
    @@map("user")
}

model Admin {
    id              Int            @id @default(autoincrement())
    adm_id_photo    Int?
    adm_name        String         @db.VarChar(255)
    email           String         @db.VarChar(255)
    adm_phone       String         @db.VarChar(255)
    adm_cnpj        String         @db.VarChar(255)
    password        String         @db.VarChar(255)
    adm_delete      Boolean        @default(false)
    created_at      DateTime       @default(now())
    updated_at      DateTime       @default(now())
    photo           Photo?         @relation(fields: [adm_id_photo], references: [id], onDelete: Cascade, onUpdate: NoAction)
    admin_services  AdminService[]
    admin_addresses AdminAddress[]
    admin_products  AdminProduct[]

    @@index([adm_id_photo])
    @@map("admin")
}

model AdminProduct {
    id              Int      @id @default(autoincrement())
    adp_id_admin    Int
    adp_price       Float
    adp_name        String   @db.VarChar(255)
    adp_description String   @db.VarChar(255)
    adp_delete      Boolean  @default(false)
    created_at      DateTime @default(now())
    updated_at      DateTime @default(now())
    admin           Admin    @relation(fields: [adp_id_admin], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([adp_id_admin])
    @@map("admin_products")
}

model AdminService {
    id           Int      @id @default(autoincrement())
    ads_id_admin Int
    ads_day_week Int
    ads_start    DateTime
    ads_final    DateTime
    ads_delete   Boolean  @default(false)
    created_at   DateTime @default(now())
    updated_at   DateTime @default(now())
    admin        Admin    @relation(fields: [ads_id_admin], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([ads_id_admin])
    @@map("admin_service")
}

model Photo {
    id         Int      @id @default(autoincrement())
    pho_size   Int
    pho_name   String   @db.VarChar(255)
    pho_delete Boolean  @default(false)
    pho_path   String   @db.VarChar(255)
    created_at DateTime @default(now())
    updated_at DateTime @default(now())
    User       User[]
    Admin      Admin[]

    @@map("photo")
}
